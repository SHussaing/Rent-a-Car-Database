-- A Function that calculates duration between two dates
CREATE OR REPLACE FUNCTION CALCULATE_DURATION (START_DATE IN DATE,END_DATE IN DATE) RETURN NUMBER
IS
    NUM_OF_DAYS  NUMBER;
BEGIN 
    NUM_OF_DAYS := END_DATE - START_DATE;
    RETURN NUM_OF_DAYS;
END;
/

-- A function that calculates initial rental cost with given period and daily rate
CREATE OR REPLACE FUNCTION CALCULATE_RENTAL_COST (V_PERIOD IN NUMBER,V_RATE IN NUMBER) RETURN NUMBER
IS
    V_COST  NUMBER(10,3);
BEGIN 
    V_COST := V_PERIOD * V_RATE;
    RETURN V_COST;
END;
/

-- A function that calculates late penalty cost within late duration and late rate
CREATE OR REPLACE FUNCTION CALCULATE_LATE_PENANLTY_COST (V_LATE_DURATION IN NUMBER,V_LATE_RATE IN NUMBER) RETURN NUMBER
IS
    V_LCOST  NUMBER(6,3);
BEGIN 
    V_LCOST := V_LATE_DURATION * V_LATE_RATE;
    RETURN V_LCOST;
END;
/
-- A function that calculates extra equipment cost for certain rental
CREATE OR REPLACE FUNCTION CALCUALTE_EX_EQUIPMENT_COST (RENTALID IN NUMBER) RETURN NUMBER
IS
    CURSOR EXTRA_EQUIP IS 
    SELECT RE.EQUIPMENT_ID,RE.QUANTITY,E.EQUIPMENT_DAILY_PRICE
    FROM RENTAL_EQUIPMENT RE, EXTRA_EQUIPMENT E
    WHERE RE.EQUIPMENT_ID = E.EQUIPMENT_ID AND
    RENTALID  = RE.RENTAL_ID;
    START_DATE DATE;
    END_DATE DATE;
    NUM_OF_EQUIPMENT NUMBER;
    V_DURATION NUMBER;
    V_EXTRA_EQUIPMENT_COST NUMBER :=0;
BEGIN 
 SELECT COUNT (*) INTO NUM_OF_EQUIPMENT FROM RENTAL_EQUIPMENT WHERE RENTALID = RENTAL_ID;
    IF NUM_OF_EQUIPMENT > 0 THEN
    SELECT RENTAL_START_DATE,ACTUAL_RETURN_DATE INTO START_DATE, END_DATE FROM RENTAL WHERE RENTAL_ID = RENTALID;
    V_DURATION := CALCULATE_DURATION (START_DATE, END_DATE);
    FOR EQUIPMENT_RECORD IN EXTRA_EQUIP
    LOOP
    V_EXTRA_EQUIPMENT_COST := V_EXTRA_EQUIPMENT_COST + (EQUIPMENT_RECORD.QUANTITY*V_DURATION);
    END LOOP;
    END IF;
    RETURN V_EXTRA_EQUIPMENT_COST;
END;
/


-- A function that calcualtes cost after discount

CREATE OR REPLACE FUNCTION CALCUALTE_COST_AFTER_DISCOUNT (V_COST IN NUMBER,V_DIS_RATE IN NUMBER) RETURN NUMBER
IS
    V_COST_AFTER_DISCOUNT  NUMBER(10,3);
BEGIN 
    V_COST_AFTER_DISCOUNT := V_COST - (V_COST*V_DIS_RATE);
    RETURN V_COST_AFTER_DISCOUNT;
END;
/

-- A funcation that calculate cost after VAT
CREATE OR REPLACE FUNCTION CALCUALTE_COST_AFTER_VAT (V_COST IN NUMBER,V_VAT_RATE IN NUMBER) RETURN NUMBER
IS
    V_COST_AFTER_VAT  NUMBER(10,3);
BEGIN 
    V_COST_AFTER_VAT := V_COST + (V_COST*V_VAT_RATE);
    RETURN V_COST_AFTER_VAT;
END;
/

-- A Function that takes Customer ID as an IN Parameter and returns a Customer Record if customer exists else returns null.
CREATE OR REPLACE FUNCTION GET_CUSTOMER(CUST_ID IN NUMBER) RETURN CUSTOMER%ROWTYPE
IS
  CUST_RECORD CUSTOMER%ROWTYPE;
BEGIN
    SELECT * INTO CUST_RECORD FROM CUSTOMER
    WHERE CUSTOMER_ID = CUST_ID;
    RETURN CUST_RECORD;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;



